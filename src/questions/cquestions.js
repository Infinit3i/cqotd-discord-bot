let cquestions = [
    {
      category: "C Programming",
      question: "What is the purpose of the `#include` directive in C?",
      answer: "Include libraries",
      hint: "Used to add standard libraries.",
      blank: "xxxxxx xxxxxxxxx",
      review: "<https://en.wikipedia.org/wiki/C_preprocessor#Include_directive>",
    },
    {
      category: "C Programming",
      question: "What does `printf` do in C?",
      answer: "Prints output",
      hint: "Displays data to the screen.",
      blank: "xxxxxx xxxxxx",
      review: "<https://www.tutorialspoint.com/c_standard_library/c_function_printf.htm>",
    },
    {
      category: "C Programming",
      question: "What is the default return type of the `main` function in C?",
      answer: "int",
      hint: "Used to return an exit status.",
      blank: "xxx",
      review: "<https://en.cppreference.com/w/c/language/main_function>",
    },
    {
      category: "C Programming",
      question: "What is a pointer in C?",
      answer: "Stores memory address",
      hint: "Indirectly accesses variables.",
      blank: "xxxxxx xxxxxxx xxxxxxx",
      review: "<https://www.geeksforgeeks.org/pointers-in-c-and-c-set-1-introduction-arithmetic-and-array/>",
    },
    {
      category: "C Programming",
      question: "What does the `return` statement do in a function?",
      answer: "Exits function",
      hint: "Provides a result to the caller.",
      blank: "xxxxx xxxxxxxx",
      review: "<https://en.cppreference.com/w/c/language/return>",
    },
    {
      category: "C Programming",
      question: "What is the purpose of a `for` loop in C?",
      answer: "Iterate a block of code",
      hint: "Used for repetitive tasks.",
      blank: "xxxxxxx x xxxxx xx xxxx",
      review: "<https://www.geeksforgeeks.org/for-loop-in-c/>",
    },
    {
      category: "C Programming",
      question: "What is the use of `malloc` in C?",
      answer: "Allocate memory dynamically",
      hint: "Used for dynamic memory allocation.",
      blank: "xxxxxxxx xxxxxxx xxxxxxxxx",
      review: "<https://www.tutorialspoint.com/c_standard_library/c_function_malloc.htm>",
    },
    {
      category: "C Programming",
      question: "What is the syntax to declare an integer variable in C?",
      answer: "int variable_name;",
      hint: "Starts with a data type.",
      blank: "xxx xxxxxxxxxxxxxxx",
      review: "<https://www.programiz.com/c-programming/c-variables-constants>",
    },
    {
      category: "C Programming",
      question: "What is a `struct` in C?",
      answer: "User-defined data type",
      hint: "Groups related data.",
      blank: "xxxx xxxxxxxx xxxx xxxx",
      review: "<https://www.geeksforgeeks.org/structures-c/>",
    },
    {
      category: "C Programming",
      question: "What does the `break` statement do in loops?",
      answer: "Exits loop",
      hint: "Stops the iteration.",
      blank: "xxxxx xxxx",
      review: "<https://www.programiz.com/c-programming/c-break-statement>",
    },
    {
      category: "C Programming",
      question: "What is a null pointer in C?",
      answer: "Points to nothing",
      hint: "Value is `NULL`.",
      blank: "xxxxxx xx xxxxxxx",
      review: "<https://www.geeksforgeeks.org/null-pointer-in-c/>",
    },
    {
      category: "C Programming",
      question: "What is the purpose of the `sizeof` operator?",
      answer: "Determine size of data",
      hint: "Returns size in bytes.",
      blank: "xxxxxxxx xxxx xx xxxx",
      review: "<https://www.geeksforgeeks.org/sizeof-operator-in-c/>",
    },
    {
      category: "C Programming",
      question: "What is the difference between `++i` and `i++`?",
      answer: "Order of increment",
      hint: "Prefix vs postfix.",
      blank: "xxxxx xx xxxxxxxxx",
      review: "<https://www.geeksforgeeks.org/difference-between-i-and-i-in-c/>",
    },
    {
      category: "C Programming",
      question: "What does `scanf` do in C?",
      answer: "Takes input",
      hint: "Reads user input.",
      blank: "xxxxx xxxxxx",
      review: "<https://www.geeksforgeeks.org/scanf-in-c/>",
    },
    {
      category: "C Programming",
      question: "What is recursion in C?",
      answer: "Function calls itself",
      hint: "Used for repetitive tasks.",
      blank: "xxxxxxxx xxxxx xxxxxx",
      review: "<https://www.programiz.com/c-programming/c-recursion>",
    },
    {
      category: "C Programming",
      question: "What does `free` do in C?",
      answer: "Deallocates memory",
      hint: "Releases dynamic memory.",
      blank: "xxxxxxxxxxx xxxxxxx",
      review: "<https://www.geeksforgeeks.org/free-memory-function-in-c/>",
    },
    {
      category: "C Programming",
      question: "What is a void function in C?",
      answer: "No return value",
      hint: "Used when nothing is returned.",
      blank: "xx xxxxx xxxxxx",
      review: "<https://www.programiz.com/c-programming/c-user-defined-functions>",
    },
    {
      category: "C Programming",
      question: "What is the purpose of an array in C?",
      answer: "Store multiple values",
      hint: "A collection of variables.",
      blank: "xxxxx xxxxxxxxx xxxxxx",
      review: "<https://www.geeksforgeeks.org/arrays-in-c-cpp/>",
    },
    {
      category: "C Programming",
      question: "What is the maximum size of an int in C?",
      answer: "Depends on platform",
      hint: "32-bit or 64-bit.",
      blank: "xxxxxxx xx xxxxxxxx",
      review: "<https://en.cppreference.com/w/c/language/arithmetic_types>",
    },
    {
      category: "C Programming",
      question: "What is the use of `#define` in C?",
      answer: "Create macros",
      hint: "Used for constants.",
      blank: "xxxxxx xxxxx",
      review: "<https://www.geeksforgeeks.org/cc-macros-and-its-types/>",
    },
    {
      category: "C Programming",
      question: "What is an infinite loop?",
      answer: "Never ends",
      hint: "Condition is always true.",
      blank: "xxxxx xxxx",
      review: "<https://www.geeksforgeeks.org/infinite-loops-in-c/>",
    },
    {
      category: "C Programming",
      question: "What is the purpose of a function prototype in C?",
      answer: "Declares function",
      hint: "Defines function signature.",
      blank: "xxxxxxxx xxxxxxxx",
      review: "<https://www.tutorialspoint.com/cprogramming/c_functions.htm>",
    },
    {
      category: "C Programming",
      question: "What is the `typedef` keyword used for?",
      answer: "Create new type name",
      hint: "Used for aliases.",
      blank: "xxxxxx xxx xxxx xxxx",
      review: "<https://www.geeksforgeeks.org/typedef-in-c-language/>",
    },
    {
      category: "C Programming",
      question: "What is the difference between `struct` and `union` in C?",
      answer: "Memory allocation",
      hint: "Union shares memory.",
      blank: "xxxxxx xxxxxxxxxxxx",
      review: "<https://www.geeksforgeeks.org/difference-between-structure-and-union/>",
    },
    {
      category: "C Programming",
      question: "What does the `exit` function do?",
      answer: "Terminates program",
      hint: "Stops execution.",
      blank: "xxxxxxxxxx xxxxxxxx",
      review: "<https://en.cppreference.com/w/c/program/exit>",
    },
    {
      category: "C Programming",
      question: "What is the difference between `=` and `==`?",
      answer: "Assignment vs comparison",
      hint: "Used differently in logic.",
      blank: "xxxxxxxxx xx xxxxxxxxxx",
      review: "<https://www.geeksforgeeks.org/difference-between-and-in-c-cpp/>",
    },
    {
      category: "C Programming",
      question: "What does the `continue` statement do in loops?",
      answer: "Skips to next iteration",
      hint: "Avoids remaining code.",
      blank: "xxxxx xx xxxx xxxxxxxxxx",
      review: "<https://www.programiz.com/c-programming/c-continue-statement>",
    },
    {
      category: "C Programming",
      question: "What is a static variable in C?",
      answer: "Persists across function calls",
      hint: "Retains value between calls.",
      blank: "xxxxxxxx xxxxxx xxxxxxx xxxxx",
      review: "<https://www.geeksforgeeks.org/static-variables-in-c/>",
    },
    {
      category: "C Programming",
      question: "What is a segmentation fault?",
      answer: "Invalid memory access",
      hint: "Occurs due to bad pointers.",
      blank: "xxxxxx xxxxxxx xxxxxxx",
      review: "<https://www.geeksforgeeks.org/core-dump-segmentation-fault-c-cpp/>",
    },
    {
      category: "C Programming",
      question: "What does `fopen` do in C?",
      answer: "Opens a file",
      hint: "Used for file handling.",
      blank: "xxxxx x xxxx",
      review: "<https://www.tutorialspoint.com/c_standard_library/c_function_fopen.htm>",
    },
  ];
  
  module.exports = {
    category: "C Programming",
    fetchQuestion: async () => {
      const randomIndex = Math.floor(Math.random() * cquestions.length);
      return cquestions[randomIndex];
    },
    getAllQuestions: async () => {
      return cquestions;
    },
  };
  